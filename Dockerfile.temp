# syntax=docker/dockerfile:1

FROM golang:1.19 AS build

ARG ACCESS_TOKEN_USR="admin-zulu"
ARG ACCESS_TOKEN_PWD="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"

# git is required to fetch go dependencies
RUN apt-get update && apt-get install -y ca-certificates git-core ssh

# Create the user and group files that will be used in the running 
# container to run the process as an unprivileged user.
RUN mkdir /user && \
    echo 'nobody:x:65534:65534:nobody:/:' > /user/passwd && \
    echo 'nobody:x:65534:' > /user/group

# Create a netrc file using the credentials specified using --build-arg
RUN printf "machine github.com\n\
    login ${ACCESS_TOKEN_USR}\n\
    password ${ACCESS_TOKEN_PWD}\n\
    \n\
    machine api.github.com\n\
    login ${ACCESS_TOKEN_USR}\n\
    password ${ACCESS_TOKEN_PWD}\n"\
    >> /root/.netrc
RUN chmod 600 /root/.netrc

ENV GOPRIVATE="github.com/zuluapp"

# Set the working directory outside $GOPATH to enable the support for modules.
WORKDIR /app

COPY ./ ./

ENV SCOPE=develop-read
ENV APPLICATION=prometheus-go
ENV APPLICATION_ID=1234567890123456789012345678901234567890

EXPOSE 8080

ENTRYPOINT ["go", "run", "cmd/main.go"]

# Run the script: docker build --tag docker-prometheus-go .
# After, run: docker run -d -p 8080:8080 docker-prometheus-go